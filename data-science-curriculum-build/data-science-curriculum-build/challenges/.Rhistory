) %>%
pivot_longer(
names_to = "E",
values_to = "E_val",
cols = c("E_00", "E_45", "E_90")
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "mul",
cols = c("mu_00", "mu_45", "mu_90")
) %>%
separate(
col = angle,
into = c("mu_","ang"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "E_holder",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "mu",
cols = c("mu_00", "mu_45", "mu_90")
) %>%
separate(
col = angle,
into = c("mu_","ang"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "E_holder",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
) %>%
separate(
col = angle,
into = c("E_","ang"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "mu_holder",
values_to = "mu",
cols = c("mu_00", "mu_45", "mu_90")
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
) %>%
separate(
col = angle,
into = c("E_","ang"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "mu_holder",
values_to = "mu",
cols = c("mu_00", "mu_45", "mu_90")
) %>%
subset(select = -c(E_, mu_holder) )
df_stang_long
View(df_stang_long)
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "nu")
)
)
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
) %>%
separate(
col = angle,
into = c("E_","angle"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "mu_holder",
values_to = "mu",
cols = c("mu_00", "mu_45", "mu_90")
) %>%
subset(select = -c(E_, mu_holder) )
df_stang_long
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_to = "angle",
values_to = "E",
cols = c("E_00", "E_45", "E_90")
) %>%
separate(
col = angle,
into = c("E_","angle"),
sep = -2,
convert = TRUE
) %>%
pivot_longer(
names_to = "mu_holder",
values_to = "mu",
cols = c("mu_00", "mu_45", "mu_90")
) %>%
subset(select = -c(E_, mu_holder) ) %>%
distinct()
df_stang_long
View(df_stang_long)
View(df_stang_long)
View(df_stang)
70/3
df_stang_long <-
df_stang %>%
pivot_longer(
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90"),
names_sep = "_",
names_to = c(".value","angle")
)
View(df_stang_long)
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
)
df_stang_long
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
View(df_stang_long)
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E >= 0 && mu>=0
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E >=0 && mu>0
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E >=0.0 && mu>0.0
)
df_stang_long
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E !=-1 & mu != -1
)
df_stang_long
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
## Type
assertthat::assert_that(
(df_stang_long %>% pull(angle) %>% typeof()) == "integer"
)
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E !=-1 & mu != -1
) %>%
mutate(angle = as.integer(angle))
df_stang_long
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
## Type
assertthat::assert_that(
(df_stang_long %>% pull(angle) %>% typeof()) == "integer"
)
print("Very good!")
library(tidyverse)
## NOTE: If you extracted all challenges to the same location,
## you shouldn't have to change this filename
filename <- "./data/stang.csv"
## Load the data
df_stang <- read_csv(filename)
df_stang
## TASK: Tidy `df_stang`
df_stang_long <-
df_stang %>%
pivot_longer(
names_sep = "_",
names_to = c(".value","angle"),
cols = c("E_00", "E_45", "E_90", "mu_00", "mu_45", "mu_90")
) %>%
filter(
E !=-1 & mu != -1
) %>%
mutate(angle = as.integer(angle))
df_stang_long
## NOTE: No need to change this
## Names
assertthat::assert_that(
setequal(
df_stang_long %>% names,
c("thick", "alloy", "angle", "E", "mu")
)
)
## Dimensions
assertthat::assert_that(all(dim(df_stang_long) == c(26, 5)))
## Type
assertthat::assert_that(
(df_stang_long %>% pull(angle) %>% typeof()) == "integer"
)
print("Very good!")
##
df_stang_long %>%
glimpse
##
df_stang_long <- order(angle)
##
q2-task <- df_stang_long[order(angle)]
##
df_stang_long %>% order(angle)
?order
##
df_stang_long %>% order(df_stang_long)
##
order(df_stang_long)
##
order(df_stang_long.angle)
##
df_stang_long %>%
summarize(across(where(is.numeric), ~sum(is.na(.)))) %>%
glimpse
##
df_stang_long %>%
summarize() %>%
glimpse
?summarize
##
df_stang_long %>%
summarize(alloy) %>%
glimpse
View(df_stang_long)
##
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st")) %>%
glimpse
##
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st"),
e_mean = mean(E),
mu_mean = mean(mu),
thick = mean(thick) %>%
glimpse
##
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st"),
e_mean = mean(E),
mu_mean = mean(mu),
thick = mean(thick)) %>%
glimpse
##
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st"),
e_mean = mean(E),
e_std = sd(E),
e_var = var(E),
mu_mean = mean(mu),
mu_std = sd(mu),
mu_var = var(mu),
thick_mean = mean(thick),
thick_std = sd(thick),
thick_var = var(thick)
) %>%
glimpse
?var()
##
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st"),
e_mean = mean(E),
e_std = sd(E),
e_var = var(E),
mu_mean = mean(mu),
mu_std = sd(mu),
mu_var = var(mu),
thick_mean = mean(thick),
thick_std = sd(thick),
thick_var = var(thick)
) %>%
glimpse
##
df_stang_long %>%
glimpse
df_stang_long %>%
summarize(alloy_count = sum(alloy == "al_24st"),
e_mean = mean(E),
e_std = sd(E),
e_var = var(E),
mu_mean = mean(mu),
mu_std = sd(mu),
mu_var = var(mu),
thick_mean = mean(thick),
thick_std = sd(thick),
thick_var = var(thick),
) %>%
glimpse
?summarize()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(thickness, E)) +
geom_point()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(thick, E)) +
geom_point()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(thick, E)) +
geom_point()
df_stang_long %>%
ggplot(aes(angle, E)) +
geom_point()
df_stang_long %>%
ggplot(aes(thick, mu)) +
geom_point()
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_point()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_point()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_point()
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(group =angle, mu)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(group = mu)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(mu, angle)) +
geom_boxplot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(mu, angle)) +
geom_plot()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(mu, angle)) +
geom_point()
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(angle, mu)) +
geom_point()
## NOTE: No need to change; run this chunk
df_stang_long %>%
ggplot(aes(nu, E, color = as_factor(thick))) +
geom_point(size = 3) +
theme_minimal()
## NOTE: No need to change; run this chunk
df_stang_long %>%
ggplot(aes(mu, E, color = as_factor(thick))) +
geom_point(size = 3) +
theme_minimal()
## TASK: Investigate your question from q1 here
mpg %>%
ggplot(aes(x = mu)) +
geom_bar() +
facet_wrap(~ angle)
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(x = mu)) +
geom_bar() +
facet_wrap(~ angle)
## TASK: Investigate your question from q1 here
df_stang_long %>%
ggplot(aes(y = mu)) +
geom_bar() +
facet_wrap(~ angle)
