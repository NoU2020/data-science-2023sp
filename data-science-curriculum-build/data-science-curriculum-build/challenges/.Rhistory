) +
geom_point(position = position_dodge(width = wid)) +
coord_flip() +
labs(
x = "County",
y = "Median Household Income"
)
ggplot(df_data, aes(x=population_estimate, y=income_SE))+
geom_point(alpha = 0.5, color = "purple") +
scale_x_log10() +
scale_y_log10() +
labs(x = "Total population (log10)", y = "Standard Error (log10)",
title = "Standard Error vs. Population for all counties")
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography"))
select(-c(geographic_area_name)
glimpse(df_data)
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography"))
select(-c(geographic_area_name))
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography"))
select(-c(geographic_area_name,geographic_area_name))
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography"))
glimpse(df_data)
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography"))
select(-c(geographic_area_name, 'Geographic Area Name'))
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c(geographic_area_name, 'Geographic Area Name'))
glimpse(df_data)
## TODO: Join df_q4 and df_pop by the appropriate column
df_data <- df_q4 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name'))
glimpse(df_data)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("age") &matches("\\d to \\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d-person families)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("age") &matches("\\d to \\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d to \\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") &matches("\\d to \\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d to \\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") &matches("\\d to \\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") &matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") &matches("to \\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
glimpse()
?matches
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
glimpse()
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name'))
View(df_data2)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name')) %>%
na.omit(df_data2)
View(df_data2)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name')) %>%
na.omit(df_data2)
View(df_data2)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
na.omit(df_q8)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name')) %>%
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
na.omit(df_q8)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name'))
View(df_data2)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("average") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("average"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
na.omit(df_q8)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
na.omit(df_q8)
df_data2 <- df_q8 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name'))
wid <- 0.5
df_data2 %>%
filter(str_detect(geographic_area_name, "Massachusetts")) %>%
mutate(
county = str_remove(geographic_area_name, " County,.*$"),
county = fct_reorder(county, income_estimate)
) %>%
ggplot(aes(county, income_estimate, color = category)) +
geom_errorbar(
aes(ymin = income_lo, ymax = income_hi),
position = position_dodge(width = wid)
) +
geom_point(position = position_dodge(width = wid)) +
coord_flip() +
labs(
x = "County",
y = "Median Household Income"
)
## TODO: Pose and answer your own question about the data
df_q8 <-
df_income %>%
select(
Geography,
contains("Geographic"),
# This will select only the numeric d-person family columns;
# it will ignore the annotation columns
contains("median") & contains("by age of householder")&matches("\\d years") & !contains("Annotation of")
) %>%
mutate(across(contains("median"), as.numeric)) %>%
## TODO: Pivot the data, rename the columns
pivot_longer(
names_to = c(".value", "category"),
names_pattern = "(Estimate|Margin of Error).*(\\d\\d to \\d\\d years)",
cols = c(-Geography, -contains("Geographic")),
) %>%
rename(
geographic_area_name = 'Geographic Area Name',
income_estimate = Estimate,
income_moe = "Margin of Error"
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe) %>%
na.omit(df_q8)
df_q8_2<-df_q8 %>%
mutate(
income_SE = income_moe / 1.645,
income_lo = income_estimate - income_SE,
income_hi = income_estimate + income_SE,
income_CV = income_SE / income_estimate
) %>%
select(Geography, geographic_area_name, category, income_estimate, income_moe,income_SE, income_lo, income_hi, income_CV)
df_data2 <- df_q8_2 %>%
left_join(df_pop, by = c("Geography" = "Geography")) %>%
select(-c('Geographic Area Name'))
wid <- 0.5
df_data2 %>%
filter(str_detect(geographic_area_name, "Massachusetts")) %>%
mutate(
county = str_remove(geographic_area_name, " County,.*$"),
county = fct_reorder(county, income_estimate)
) %>%
ggplot(aes(county, income_estimate, color = category)) +
geom_errorbar(
aes(ymin = income_lo, ymax = income_hi),
position = position_dodge(width = wid)
) +
geom_point(position = position_dodge(width = wid)) +
coord_flip() +
labs(
x = "County",
y = "Median Household Income"
)
## NOTE: No need to edit
assertthat::assert_that(setequal(
names(df_q4),
c("Geography", "geographic_area_name", "category", "income_estimate", "income_moe",
"income_SE", "income_lo", "income_hi", "income_CV")
))
assertthat::assert_that(
abs(
df_q4 %>%
filter(Geography == "0500000US01001", category == "2-person families") %>%
pull(income_SE) - 4050.456
) / 4050.456 < 1e-3
)
#assertthat::assert_that(
#  abs(
#    df_q4 %>%
#    filter(Geography == "0500000US01001", category == "2-person families") %>%
#    pull(income_lo) - 54513.72
#  ) / 54513.72 < 1e-3
#)
#assertthat::assert_that(
#  abs(
#    df_q4 %>%
#    filter(Geography == "0500000US01001", category == "2-person families") %>%
#    pull(income_hi) - 75380.28
#  ) / 75380.28 < 1e-3
#)
assertthat::assert_that(
abs(
df_q4 %>%
filter(Geography == "0500000US01001", category == "2-person families") %>%
pull(income_CV) - 0.06236556
) / 0.06236556 < 1e-3
)
print("Nice!")
