library(tidyverse)
# knitr options
knitr::opts_chunk$set(echo = TRUE)
head(iris)
?diamonds
glimpse(diamonds)
summary(diamonds)
diamonds %>%
group_by(cut) %>%
summarize(carat_mean = mean(carat))
diamonds%>% summary()
df_q5
df_q5 <-
read.csv("./data/tiny.csv")
View(df_q5)
View(df_q5)
library(tidyverse)
## TODO: Re-write the code above following the tidyverse style guide
vignette(package = "dplyr")
iris %>%
as_tibble() %>%
filter(
# TODO: Filter on Species "setosa"
Species == "setosa"
)
## TODO: Consult the docs; Write your code here
iri %>%
as.tibble()%>%
filter(
5.1<=Sepal.Length,
Sepal.length <= 6.4
)
## TODO: Consult the docs; Write your code here
iris %>%
as.tibble()%>%
filter(
5.1<=Sepal.Length,
Sepal.length <= 6.4
)
## TODO: Consult the docs; Write your code here
iris %>%
as.tibble()%>%
filter(
5.1 <= Sepal.Length,
Sepal.Length <= 6.4
)
?cut_number
?cut_number
?parse_number()
?row_number()
?cut_number
?parse_number()
?cut_number
?parse_number()
?row_number()
library(tidyverse)
## TODO: Re-write the code above following the tidyverse style guide
diamonds %>%
group_by(cut) %>%
summarize(
mean_price = mean(price)
)
## Original code; hard to read
summarize(group_by(diamonds, cut), mean_price = mean(price))
## TODO: Re-write the code above following the tidyverse style guide
iris %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width) %>%
group_by(Species) %>%
summarise_if(is.numeric, mean)%>%
ungroup() %>%
pivot_longer(names_to = "measure", values_to = "value", cols = -Species) %>%
arrange(value)
## NOTE: You can copy this code to the chunk below
iris %>%
mutate(Sepal.Area=Sepal.Length*Sepal.Width) %>%
group_by( Species ) %>%
summarize_if(is.numeric,mean)%>%
ungroup() %>%
pivot_longer( names_to="measure",values_to="value",cols=-Species ) %>%
arrange(value )
## TODO: Re-write the code above following the tidyverse style guide
iris %>%
group_by(Species) %>%
summarize(
Sepal.Length = mean(Sepal.Length),
Sepal.Width = mean(Sepal.Width),
Petal.Length = mean(Petal.Length),
Petal.Width = mean(Petal.Width)
)
# knitr options
knitr::opts_chunk$set(echo = TRUE)
## Re-indent these lines
c(
"foo",
"bar",
"goo",
"gah"
)
## Re-indent these lines
c(
"foo",
"bar",
"goo",
"gah"
)
# knitr options
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
## TODO: Assign the appropriate vector to vec_q1
vec_q1 <- c(1, 2, 3)
vec_q1
## NOTE: No need to change this
assertthat::assert_that(length(vec_q1) == 3)
assertthat::assert_that(mean(vec_q1) == 2)
print("Nice!")
## TODO: Assign the appropriate vector to vec_q2
vec_q2 <- c(vec_q1, 4)
vec_q2
## NOTE: No need to change this
assertthat::assert_that(length(vec_q2) == 4)
assertthat::assert_that(mean(vec_q2) == 2.5)
print("Well done!")
# knitr options
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# knitr options
knitr::opts_chunk$set(echo = TRUE)
## TASK: Describe what went wrong here
## Set our airport
airport <- "BOS"
## Check our airport value
airport == ATL
v_string <- c("00", "45", "90")
v_integer <- NA_real_
v_string <- c("00", "45", "90")
v_integer <- as.integer(v_string)
## NOTE: No need to change this!
assertthat::assert_that(
assertthat::are_equal(
v_integer,
c(0L, 45L, 90L)
)
)
print("Great job!")
